resources:
  - name: lattice-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/lattice-ci.git
      branch: master
  - name: lattice
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/lattice.git
      branch: master
  - name: lattice-pipeline-image-changes
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/lattice.git
      branch: master
      paths: [images/lattice-pipeline]
  - name: lattice-bosh-image-changes
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/lattice.git
      branch: master
      paths: [images/lattice-bosh]
  - name: diego-release
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/diego-release.git
      branch: master
  - name: garden-linux-release
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/garden-linux-release.git
      branch: master
  - name: cf-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-release.git
      branch: runtime-passed
  - name: cf-routing-release
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/cf-routing-release.git
      branch: release_candidate
  - name: lattice-tar-build
    type: s3
    source:
      bucket: lattice
      region_name: us-west-2
      regexp: build/lattice-v(.*).tgz
      private: true
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: ltc-tar-build
    type: s3
    source:
      bucket: lattice
      region_name: us-west-2
      regexp: build/ltc-v(.*).tgz
      private: true
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: lattice-tar-acceptance
    type: s3
    source:
      bucket: lattice
      region_name: us-west-2
      regexp: acceptance/backend/lattice-v(.*).tgz
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: lattice-bundle-acceptance
    type: s3
    source:
      bucket: lattice
      region_name: us-west-2
      regexp: acceptance/lattice-bundle-v(.*).zip
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: lattice-tar-nightly
    type: s3
    source:
      bucket: lattice
      region_name: us-west-2
      regexp: nightly/backend/lattice-v(.*).tgz
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: lattice-bundle-nightly
    type: s3
    source:
      bucket: lattice
      region_name: us-west-2
      regexp: nightly/lattice-bundle-v(.*).zip
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: lattice-tracker
    type: tracker
    source:
      token: {{tracker-api-token}}
      project_id: "1183596"
  - name: publish-nightly-timer
    type: time
    source:
      start: 18:00 -0500
      stop: 19:00 -0500
      interval: 1h
  - name: lattice-pipeline-image
    type: docker-image
    source:
      repository: cloudfoundry/lattice-pipeline
      email: {{docker-hub-email}}
      username: {{docker-hub-username}}
      password: {{docker-hub-password}}
  - name: lattice-bosh-image
    type: docker-image
    source:
      repository: cloudfoundry/lattice-bosh
      email: {{docker-hub-email}}
      username: {{docker-hub-username}}
      password: {{docker-hub-password}}

jobs:
  - name: unit-test-ltc
    plan:
      - aggregate:
        - get: lattice-ci
        - get: lattice
          trigger: true
      - task: unit-test-ltc
        file: lattice/concourse/tasks/unit-test-ltc/task.yml

  - name: unit-test-davtool
    plan:
      - get: lattice
        trigger: true
      - task: unit-test-cell-helper
        file: lattice/concourse/tasks/unit-test-cell-helper/task.yml
        config:
          params:
            CELL_HELPER: davtool

  - name: unit-test-s3tool
    plan:
      - get: lattice
        trigger: true
      - task: unit-test-cell-helper
        file: lattice/concourse/tasks/unit-test-cell-helper/task.yml
        config:
          params:
            CELL_HELPER: s3tool

  - name: unit-test-tee2metron
    plan:
      - get: lattice
        trigger: true
      - task: unit-test-cell-helper
        file: lattice/concourse/tasks/unit-test-cell-helper/task.yml
        config:
          params:
            CELL_HELPER: tee2metron

  - name: go-fmt
    plan:
      - get: lattice
        trigger: true
      - aggregate:
        - task: go-fmt-ltc
          file: lattice/concourse/tasks/go-fmt/task.yml
          config:
            params:
              GO_FMT_PATH: ltc
        - task: go-fmt-davtool
          file: lattice/concourse/tasks/go-fmt/task.yml
          config:
            params:
              GO_FMT_PATH: cell-helpers/davtool
        - task: go-fmt-s3tool
          file: lattice/concourse/tasks/go-fmt/task.yml
          config:
            params:
              GO_FMT_PATH: cell-helpers/s3tool
        - task: go-fmt-tee2metron
          file: lattice/concourse/tasks/go-fmt/task.yml
          config:
            params:
              GO_FMT_PATH: cell-helpers/tee2metron

  - name: compile
    plan:
      - aggregate:
        - get: lattice
          trigger: true
          passed:
            - go-fmt
            - unit-test-ltc
            - unit-test-davtool
            - unit-test-s3tool
            - unit-test-tee2metron
        - get: diego-release
        - get: garden-linux-release
        - get: cf-release
        - get: cf-routing-release
      - aggregate:
        - task: compile-lattice-tar
          file: lattice/concourse/tasks/compile-lattice-tar/task.yml
        - task: compile-ltc
          file: lattice/concourse/tasks/compile-ltc/task.yml
      - aggregate:
        - put: lattice-tar-build
          params:
            from: lattice/build/lattice-v(.*).tgz
            to: /build/
        - put: ltc-tar-build
          params:
            from: lattice/build/ltc-v(.*).tgz
            to: /build/

  - name: cluster-test-vagrant-aws
    plan:
      - aggregate:
        - get: lattice
          trigger: true
          passed: [compile]
        - get: lattice-tar-build
          passed: [compile]
        - get: ltc-tar-build
          passed: [compile]
      - do:
        - task: deploy-vagrant-aws
          file: lattice/concourse/tasks/deploy-vagrant-aws/task.yml
          config:
            params:
              AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
              AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
              AWS_SSH_PRIVATE_KEY: {{aws-ssh-private-key}}
        - aggregate:
          - task: cluster-test-vagrant-aws-dav
            file: lattice/concourse/tasks/cluster-test-vagrant-aws-dav/task.yml
          - task: cluster-test-vagrant-aws-s3
            file: lattice/concourse/tasks/cluster-test-vagrant-aws-s3/task.yml
            config:
              params:
                AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
                AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
                AWS_REGION: {{cluster-test-aws-region}}
                S3_BUCKET_NAME: {{cluster-test-s3-bucket-name}}
        ensure:
          task: cleanup-deploy-vagrant-aws
          file: lattice/concourse/tasks/cleanup-deploy-vagrant-aws/task.yml
          config:
            params:
              AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
              AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
              AWS_SSH_PRIVATE_KEY: {{aws-ssh-private-key}}

  - name: cluster-test-terraform-aws
    plan:
      - aggregate:
        - get: lattice
          trigger: true
          passed: [compile]
        - get: lattice-tar-build
          passed: [compile]
        - get: ltc-tar-build
          passed: [compile]
      - do:
        - task: deploy-terraform-aws
          file: lattice/concourse/tasks/deploy-terraform-aws/task.yml
          config:
            params:
              AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
              AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
              AWS_SSH_PRIVATE_KEY: {{aws-ssh-private-key}}
              AWS_SSH_PRIVATE_KEY_NAME: {{aws-ssh-private-key-name}}
        - aggregate:
          - task: cluster-test-terraform-aws-dav
            file: lattice/concourse/tasks/cluster-test-terraform-aws-dav/task.yml
          - task: cluster-test-terraform-aws-s3
            file: lattice/concourse/tasks/cluster-test-terraform-aws-s3/task.yml
            config:
              params:
                AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
                AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
                AWS_REGION: {{cluster-test-aws-region}}
                S3_BUCKET_NAME: {{cluster-test-s3-bucket-name}}
        ensure:
          task: cleanup-deploy-terraform-aws
          file: lattice/concourse/tasks/cleanup-deploy-terraform-aws/task.yml

  - name: cluster-test-terraform-gce
    serial: true
    plan:
      - aggregate:
        - get: lattice
          trigger: true
          passed: [compile]
        - get: lattice-tar-build
          passed: [compile]
        - get: ltc-tar-build
          passed: [compile]
      - do:
        - task: deploy-terraform-gce
          file: lattice/concourse/tasks/deploy-terraform-gce/task.yml
          config:
            params:
              GCE_SSH_PRIVATE_KEY: {{gce-ssh-private-key}}
              GCE_PROJECT_NAME: {{gce-project-name}}
              GCE_ACCOUNT_FILE_JSON: {{gce-account-file-json}}
        - aggregate:
          - task: cluster-test-terraform-gce-dav
            file: lattice/concourse/tasks/cluster-test-terraform-gce-dav/task.yml
          - task: cluster-test-terraform-gce-s3
            file: lattice/concourse/tasks/cluster-test-terraform-gce-s3/task.yml
            config:
              params:
                AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
                AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
                AWS_REGION: {{cluster-test-aws-region}}
                S3_BUCKET_NAME: {{cluster-test-s3-bucket-name}}
        ensure:
          task: cleanup-deploy-terraform-gce
          file: lattice/concourse/tasks/cleanup-deploy-terraform-gce/task.yml

  - name: publish-acceptance
    plan:
      - aggregate:
        - get: lattice
          trigger: true
          passed:
          - cluster-test-vagrant-aws
          - cluster-test-terraform-aws
          - cluster-test-terraform-gce
        - get: lattice-tar-build
          passed:
          - cluster-test-vagrant-aws
          - cluster-test-terraform-aws
          - cluster-test-terraform-gce
        - get: ltc-tar-build
          passed:
          - cluster-test-vagrant-aws
          - cluster-test-terraform-aws
          - cluster-test-terraform-gce
      - aggregate:
        - task: generate-terraform-templates
          file: lattice/concourse/tasks/generate-terraform-templates/task.yml
          config:
            params:
              LATTICE_URL_BASE: http://lattice.s3.amazonaws.com/acceptance/backend
        - task: generate-vagrantfile
          file: lattice/concourse/tasks/generate-vagrantfile/task.yml
          config:
            params:
              LATTICE_URL_BASE: http://lattice.s3.amazonaws.com/acceptance/backend
      - task: compile-lattice-bundles
        file: lattice/concourse/tasks/compile-lattice-bundles/task.yml
      - aggregate:
        - put: lattice-tar-acceptance
          params:
            from: lattice-tar-build/lattice-v(.*).tgz
            to: /acceptance/backend/
        - do:
          - put: lattice-bundle-acceptance
            params:
              from: compile-lattice-bundles/lattice-bundle-v(.*)-linux.zip
              to: /acceptance/
          - put: lattice-bundle-acceptance
            params:
              from: compile-lattice-bundles/lattice-bundle-v(.*)-osx.zip
              to: /acceptance/
      - put: lattice-tracker
        params:
          comment: lattice-bundle-acceptance/url
          repos: [lattice]

  - name: publish-nightly
    plan:
      - get: publish-nightly-timer
        trigger: true
      - aggregate:
        - get: lattice
          passed:
          - cluster-test-vagrant-aws
          - cluster-test-terraform-aws
          - cluster-test-terraform-gce
        - get: lattice-tar-build
          passed:
          - cluster-test-vagrant-aws
          - cluster-test-terraform-aws
          - cluster-test-terraform-gce
        - get: ltc-tar-build
          passed:
          - cluster-test-vagrant-aws
          - cluster-test-terraform-aws
          - cluster-test-terraform-gce
      - aggregate:
        - task: generate-terraform-templates
          file: lattice/concourse/tasks/generate-terraform-templates/task.yml
          config:
            params:
              LATTICE_URL_BASE: http://lattice.s3.amazonaws.com/nightly/backend
        - task: generate-vagrantfile
          file: lattice/concourse/tasks/generate-vagrantfile/task.yml
          config:
            params:
              LATTICE_URL_BASE: http://lattice.s3.amazonaws.com/nightly/backend
      - task: compile-lattice-bundles
        file: lattice/concourse/tasks/compile-lattice-bundles/task.yml
      - aggregate:
        - put: lattice-tar-nightly
          params:
            from: lattice-tar-build/lattice-v(.*).tgz
            to: /nightly/backend/
        - put: lattice-tar-nightly
          params:
            from: lattice-tar-build/lattice-v(.*).tgz
            to: /nightly/backend/lattice-latest.tgz
        - put: lattice-bundle-nightly
          params:
            from: compile-lattice-bundles/lattice-bundle-v(.*)-linux.zip
            to: /nightly/
        - put: lattice-bundle-nightly
          params:
            from: compile-lattice-bundles/lattice-bundle-v(.*)-linux.zip
            to: /nightly/lattice-bundle-latest-linux.zip
        - put: lattice-bundle-nightly
          params:
            from: compile-lattice-bundles/lattice-bundle-v(.*)-osx.zip
            to: /nightly/
        - put: lattice-bundle-nightly
          params:
            from: compile-lattice-bundles/lattice-bundle-v(.*)-osx.zip
            to: /nightly/lattice-bundle-latest-osx.zip
      - task: generate-lattice-bundle-listing
        file: lattice/concourse/tasks/generate-lattice-bundle-listing/task.yml
        config:
          params:
            AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
            AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

  - name: docker-push-lattice-pipeline
    plan:
      - get: lattice
        resource: lattice-pipeline-image-changes
        trigger: true
      - put: lattice-pipeline-image
        params:
          build: lattice/images/lattice-pipeline
          push: true

  - name: docker-push-lattice-bosh
    plan:
      - get: lattice
        resource: lattice-bosh-image-changes
        trigger: true
      - put: lattice-bosh-image
        params:
          build: lattice/images/lattice-bosh
          push: true
