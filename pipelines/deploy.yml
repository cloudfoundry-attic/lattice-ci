---
resources:
  - name: lattice-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/lattice-ci.git
      branch: master
  - name: lattice-website
    type: git
    source:
      uri: git@github.com:pivotal-cf-experimental/lattice-website
      branch: master
      private_key: {{github-ssh-key}}
  - name: lattice-ci-image-changes
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/lattice-ci.git
      branch: master
      paths: [Dockerfile]
  - name: lattice-ci-image
    type: docker-image
    source:
      repository: cloudfoundry/lattice-ci
      email: {{docker-hub-email}}
      username: {{docker-hub-username}}
      password: {{docker-hub-password}}
  - name: concourse-release
    type: github-release
    source:
      repository: concourse
      user: concourse
      access_token: {{github-api-token}}
  - name: stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
  - name: concourse-deployment
    type: bosh-deployment
    source:
      target: {{concourse-bosh-target}}
      username: admin
      password: {{concourse-bosh-password}}
      deployment: concourse
  - name: vsphere-worker-deployment
    type: bosh-deployment
    source:
      target: {{vsphere-bosh-target}}
      username: admin
      password: {{vsphere-bosh-password}}
      deployment: concourse-vsphere

jobs:
  - name: deploy-lattice-website
    plan:
    - aggregate:
      - get: lattice-ci
      - get: lattice-website
    - task: deploy-lattice-website
      file: lattice-ci/tasks/deploy-lattice-website/task.yml
      config:
        params:
          GITHUB_SSH_KEY: {{github-ssh-key}}

  - name: docker-push-lattice-ci
    plan:
    - get: lattice-ci
      resource: lattice-ci-image-changes
      trigger: true
    - put: lattice-ci-image
      params:
        build: lattice-ci
        push: true

  - name: apply-cloudformation
    serial_groups: [bosh]
    plan:
    - get: lattice-ci
    - task: apply-cloudformation
      file: lattice-ci/tasks/apply-cloudformation/task.yml
      config:
        params:
          CLOUDFORMATION_STACK_NAME: concourse
          CERTIFICATE_NAME: {{concourse-certificate-name}}
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

  - name: deploy-bosh
    serial_groups: [bosh]
    plan:
    - get: lattice-ci
      passed: [apply-cloudformation]
    - task: deploy-bosh
      file: lattice-ci/tasks/deploy-bosh/task.yml
      config:
        params:
          CLOUDFORMATION_STACK_NAME: concourse
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
          BOSH_PRIVATE_KEY: {{concourse-bosh-private-key}}

  - name: deploy-concourse
    serial_groups: [bosh]
    plan:
    - get: lattice-ci
    - aggregate:
      - get: stemcell
      - get: concourse-release
        params:
          globs:
          - concourse-*.tgz
          - garden-linux-*.tgz
      - task: generate-concourse-manifest
        file: lattice-ci/tasks/generate-concourse-manifest/task.yml
        config:
          params:
            CONCOURSE_USERNAME: {{concourse-username}}
            CONCOURSE_PASSWORD: {{concourse-password}}
            CONCOURSE_TSA_PRIVATE_KEY: {{concourse-tsa-private-key}}
            CONCOURSE_TSA_PUBLIC_KEY: {{concourse-tsa-public-key}}
            VSPHERE_WORKER_PUBLIC_KEY: {{vsphere-worker-public-key}}
            CLOUDFORMATION_STACK_NAME: concourse
            AWS_DEFAULT_REGION: us-east-1
            AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
            AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
            BOSH_TARGET: {{concourse-bosh-target}}
            BOSH_PASSWORD: {{concourse-bosh-password}}
    - put: concourse-deployment
      params:
        manifest: generate-concourse-manifest/manifest.yml
        releases:
        - concourse-release/concourse-*.tgz
        - concourse-release/garden-linux-*.tgz
        stemcells:
        - stemcell/*.tgz

  - name: deploy-vsphere-bosh
    serial_groups: [vsphere-bosh]
    plan:
    - get: lattice-ci
    - task: deploy-vsphere-bosh
      tags: [vsphere-linux-worker]
      file: lattice-ci/tasks/deploy-vsphere-bosh/task.yml
      config:
        params:
          VCENTER_ADDRESS: {{vcenter-address}}
          VCENTER_USERNAME: {{vcenter-username}}
          VCENTER_PASSWORD: {{vcenter-password}}

  - name: deploy-vsphere-worker
    serial_groups: [vsphere-bosh]
    plan:
    - get: lattice-ci
    - aggregate:
      - get: stemcell
      - get: concourse-release
        params:
          globs:
          - concourse-*.tgz
          - garden-linux-*.tgz
      - task: generate-vsphere-worker-manifest
        tags: [vsphere-linux-worker]
        file: lattice-ci/tasks/generate-vsphere-worker-manifest/task.yml
        config:
          params:
            VSPHERE_WORKER_PRIVATE_KEY: {{vsphere-worker-private-key}}
            CONCOURSE_TSA_PUBLIC_KEY: {{concourse-tsa-public-key}}
            VCENTER_ADDRESS: {{vcenter-address}}
            VCENTER_USERNAME: {{vcenter-username}}
            VCENTER_PASSWORD: {{vcenter-password}}
            BOSH_TARGET: {{vsphere-bosh-target}}
            BOSH_PASSWORD: {{vsphere-bosh-password}}
    - put: vsphere-worker-deployment
      tags: [vsphere-linux-worker]
      params:
        manifest: generate-vsphere-worker-manifest/manifest.yml
        releases:
        - concourse-release/concourse-*.tgz
        - concourse-release/garden-linux-*.tgz
        stemcells:
        - stemcell/*.tgz
